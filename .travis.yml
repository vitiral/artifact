# Based on the "trust" template v0.1.1
# https://github.com/japaric/trust/tree/v0.1.1

dist: trusty
language: generic
services: docker

env:
  global:
    - CRATE_NAME=artifact-app

matrix:
  include:
    # Linux
    - env: TARGET=i686-unknown-linux-gnu
    - env: TARGET=i686-unknown-linux-musl
    - env: TARGET=x86_64-unknown-linux-gnu
    - env: TARGET=x86_64-unknown-linux-musl

    # OSX
    - env: TARGET=i686-apple-darwin
      os: osx
    - env: TARGET=x86_64-apple-darwin
      os: osx

    ## *BSD
    #- env: TARGET=i686-unknown-freebsd DISABLE_TESTS=1
    #- env: TARGET=x86_64-unknown-freebsd DISABLE_TESTS=1
    #- env: TARGET=x86_64-unknown-netbsd DISABLE_TESTS=1

    ## Other architectures
    #- env: TARGET=aarch64-unknown-linux-gnu
    #- env: TARGET=armv7-unknown-linux-gnueabihf
    #- env: TARGET=mips-unknown-linux-gnu
    #- env: TARGET=mips64-unknown-linux-gnuabi64
    #- env: TARGET=mips64el-unknown-linux-gnuabi64
    #- env: TARGET=mipsel-unknown-linux-gnu
    #- env: TARGET=powerpc-unknown-linux-gnu
    #- env: TARGET=powerpc64-unknown-linux-gnu
    #- env: TARGET=powerpc64le-unknown-linux-gnu
    #- env: TARGET=s390x-unknown-linux-gnu DISABLE_TESTS=1

before_install: set -e

install:
  - test "$TRAVIS_OS_NAME" = "osx" && export CI_BUILD=fast || export CI_BUILD=full
  - source $PWD/env
  - sh ci/install.sh

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  # update `api_key.secure`
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it: `travis encrypt YOUR_TOKEN`
  # - Paste the output down here
  api_key:
    secure: mup1wr3gAlbMJARUpcE/573zjVHWIM3iwdzcH/6hW8RqcSJNuNz964AF/xQcIrCC4y8aZOboOPZLtc2Spo5oDk0NmygOaSbQXlJwJWdbWJ15GXTi0FMzsC83waBCO7xwKXkewqCc+NCsuPbkVoJugcETcgx0ymDaeFP6i3NAs43uIjxdHeVv58BshAwZszp0DuQZWg73Vy4diPSWyVvDYQYtYRVs6Xl9/xlIGL1peORZnk/dFhfI0zvxajNqoOyhwIJzp8nUuwVBxomsBtJ5sKa4T7FAN5HGe4EnMFfnSwAYl5ffjVd4okyMrmDAdl6nveSgeGxcT8kmMpjrLTAEjd7JBw1Pa5mIY+7YduR/XrruLwLCCix0UJpjETppXG18J0gla+znqRCMxSil2GQ18d7TW7c8uetBSDjTn+tLHqSigfXtKExLYnkFOxEzISkHYw0jTHwAadtcxJLaKMsG2MOOFc7eeHuevIftJz7r2ONkORo9s9AX64hGEZVea9+qm27y+QJ6Cor8CZa+8cmdm/NsiWAcbXDg1YpG2MSAHeF/tmqfeVSJiloKJnCnMDE1Rcg2ZmHLd12qUfuF+CrbqpVdunjfFUN6bq0igjN1BfocIsl1285KCiOBZr5p91Wg5Mn87YNR3hihRkU5s32TTH2gETHP+Y24jXtLZQZxdPw=
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    # Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    # condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true

before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $ENV_DIR

cache:
    directories:
    - $ENV_DIR

branches:
  only:
    # release tags
    - /^\d+\.\d+\.\d+.*$/
    - master

notifications:
  email:
    on_success: never
