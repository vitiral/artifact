# Based on the "trust" template v0.1.1
# https://github.com/japaric/trust/tree/v0.1.1

environment:
  global:
  # This is the Rust channel that build jobs will use by default but can be
  # overridden on a case by case basis down below
    #RUST_VERSION: stable
    RUST_VERSION: nightly-2017-06-17

    CRATE_NAME: artifact-app

  # TODO These are all the build jobs. Adjust as necessary. Comment out what you
  # don't need
  matrix:
    # MinGW
    - TARGET: i686-pc-windows-gnu
    - TARGET: x86_64-pc-windows-gnu

    # MSVC
    - TARGET: i686-pc-windows-msvc
    - TARGET: x86_64-pc-windows-msvc

    ## Testing other channels
    #- TARGET: x86_64-pc-windows-gnu
    #  RUST_VERSION: beta
    #- TARGET: x86_64-pc-windows-msvc
    #  RUST_VERSION: beta

install:
  - ps: >-
      If ($Env:TARGET -eq 'x86_64-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw64\bin'
      } ElseIf ($Env:TARGET -eq 'i686-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw32\bin'
      }
  - curl -sSf -o rustup-init.exe https://win.rustup.rs/
  - rustup-init.exe -y --default-host %TARGET% --default-toolchain %RUST_VERSION%
  - set PATH=%PATH%;C:\Users\appveyor\.cargo\bin
  - rustc -Vv
  - cargo -V

# TODO This is the "test phase", tweak it as you see fit
test_script:
  # we don't run the "test phase" when doing deploys
  - if [%APPVEYOR_REPO_TAG%]==[false] (
      cargo rustc --target %TARGET% --release --bin art --features server -- -C lto &&
      cargo test --target %TARGET% --features server &&
      cargo run --target %TARGET% --features server -- check &&
      cargo test --target %TARGET% --features server --release
    )

before_deploy:
  # - cargo rustc --target %TARGET% --release --bin art --features server -- -Z unstable-options -C lto -C target-feature=+crt-static
  - cargo rustc --target %TARGET% --release --bin art --features server -- -C lto
  - ps: ci\before_deploy.ps1

deploy:
  artifact: /.*\.zip/
  # `auth_token.secure`
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it. Go to https://ci.appveyor.com/tools/encrypt
  # - Paste the output down here
  auth_token:
    secure: e2pyiI8N9p6VD2W2ZdetwUTm7FsBBQ7E7dsHpR3b5GzH+qE2JgjS9XYRjo72SwwF
  description: ''
  on:
    # Pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    #RUST_VERSION: stable
    appveyor_repo_tag: true
  provider: GitHub

cache:
  - C:\Users\appveyor\.cargo\registry
  - target

branches:
  only:
    # Release tags
    - /^\d+\.\d+\.\d+.*$/
    - master

notifications:
  - provider: Email
    on_build_success: false

# disable automatic builds
build: false
